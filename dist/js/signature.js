webpackJsonp([12],{

/***/ 367:
/***/ (function(module, exports, __webpack_require__) {

eval("var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(704)\n}\nvar Component = __webpack_require__(4)(\n  /* script */\n  __webpack_require__(480),\n  /* template */\n  __webpack_require__(665),\n  /* styles */\n  injectStyle,\n  /* scopeId */\n  \"data-v-7f8d31d6\",\n  /* moduleIdentifier (server only) */\n  null\n)\nComponent.options.__file = \"E:\\\\lesley\\\\lesley920719\\\\vue2-vux-demo\\\\src\\\\pages\\\\signature\\\\signature.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {console.error(\"named exports are not supported in *.vue files.\")}\nif (Component.options.functional) {console.error(\"[vue-loader] signature.vue: functional components are not supported with templates, they should use render functions.\")}\n\n/* hot reload */\nif (true) {(function () {\n  var hotAPI = __webpack_require__(0)\n  hotAPI.install(__webpack_require__(1), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-7f8d31d6\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-7f8d31d6\", Component.options)\n  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nmodule.exports = Component.exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiMzY3LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3NpZ25hdHVyZS9zaWduYXR1cmUudnVlPzMzZjEiXSwic291cmNlc0NvbnRlbnQiOlsidmFyIGRpc3Bvc2VkID0gZmFsc2VcbmZ1bmN0aW9uIGluamVjdFN0eWxlIChzc3JDb250ZXh0KSB7XG4gIGlmIChkaXNwb3NlZCkgcmV0dXJuXG4gIHJlcXVpcmUoXCIhIXZ1ZS1zdHlsZS1sb2FkZXIhY3NzLWxvYWRlcj97XFxcIm1pbmltaXplXFxcIjpmYWxzZSxcXFwic291cmNlTWFwXFxcIjp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXIvaW5kZXg/e1xcXCJ2dWVcXFwiOnRydWUsXFxcImlkXFxcIjpcXFwiZGF0YS12LTdmOGQzMWQ2XFxcIixcXFwic2NvcGVkXFxcIjp0cnVlLFxcXCJoYXNJbmxpbmVDb25maWdcXFwiOnRydWV9IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy9hZnRlci1sZXNzLWxvYWRlci5qcyFsZXNzLWxvYWRlcj97J21vZGlmeVZhcnMnOnsndGhlbWUnOicjMzMzMzMzJywndGhlbWUtYmxhY2snOicjMDAwMDAwJywndGhlbWUtc2Vjb25kYXJ5JzonIzU4NTg1OCcsJ3RoZW1lLXJlZCc6JyNFNDM2NEYnLCd0aGVtZS1iZyc6JyNlZWVlZWUnLCd0aGVtZS1saW5lYXItZ3JhZGllbnQnOidsaW5lYXItZ3JhZGllbnQoLTkwZGVnLCAjZWI0NzZhIDAlLCAjZWI0NzZhIDEwMCUpJywnaGVhZGVyLWhlaWdodCc6JzAuODhyZW0nLCdwYWdlLXNwYWNlJzonMC4yNHJlbScsJ3RoZW1lLXByaW1hcnknOicjMmQ4Y2YwJywndGhlbWUtbGlnaHQtcHJpbWFyeSc6JyM1Y2FkZmYnLCd0aGVtZS1kYXJrLXByaW1hcnknOicjMmI4NWU0JywndGhlbWUtaW5mbyc6JyMyZGI3ZjUnLCd0aGVtZS1zdWNjZXNzJzonIzE5YmU2YicsJ3RoZW1lLXdhcm5pbmcnOicjZmY5OTAwJywndGhlbWUtZXJyb3InOicjZWQ0MDE0JywndGV4dC10aXRsZSc6JyMxNzIzM2QnLCd0ZXh0LWNvbnRlbnQnOicjNTE1YTZlJywnc3ViLWNvbG9yJzonIzgwODY5NScsJ2J0bi1kaXNhYmxlZCc6JyNjNWM4Y2UnLCdib3JkZXItY29sb3InOicjZGNkZWUyJywnZGl2aWRlci1jb2xvcic6JyNlOGVhZWMnLCdiYWNrZ3JvdW5kLWNvbG9yJzonI2Y4ZjhmOScsJ3RoZW1lLWJkJzonI0IzQjNCMycsJ2NvbG9yRGlzYWJsZWQnOicjQjhCOEI4JywndGhlbWVUZXh0JzonIzQxNDE0MScsJ2NvbG9yTm9ybWFsJzonIzQxNDE0MScsJ3RoZW1lLW5vcm1hbCc6JyM2RjZGNkYnLCd0aGVtZUdyZXknOicjOTk5JywnY29sb3JMaWdodCc6JyM5OTknLCd0aGVtZS10aXAnOicjQzJDMkMyJywndGhlbWVXYXJuJzonI0ZGM0IzMCcsJ3N3aXBlci1pbmRpY2F0b3ItYWN0aXZlLWNvbG9yJzonQHRoZW1lJywnZGF0ZXRpbWUtaGVhZGVyLWl0ZW0tY2FuY2VsLWZvbnQtY29sb3InOidAdGhlbWUnLCdkYXRldGltZS1oZWFkZXItaXRlbS1jb25maXJtLWZvbnQtY29sb3InOidAdGhlbWUnLCdwb3B1cC1waWNrZXItaGVhZGVyLXRleHQtY29sb3InOidAdGhlbWUnLCdkaWFsb2ctYnV0dG9uLXRleHQtcHJpbWFyeS1jb2xvcic6J0B0aGVtZScsJ3RhYi10ZXh0LWRpc2FibGVkLWNvbG9yJzonI2RkZCcsJ3RhYi10ZXh0LWRlZmF1bHQtY29sb3InOicjNjY2JywndGFiLXRleHQtYWN0aXZlLWNvbG9yJzonQHRoZW1lJywndGFiLWJhci1hY3RpdmUtY29sb3InOidAdGhlbWUnfSwnc291cmNlTWFwJzp0cnVlfSEuLi8uLi8uLi9ub2RlX21vZHVsZXMvdnV4LWxvYWRlci9zcmMvc3R5bGUtbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXN0eWxlcyZpbmRleD0wIS4vc2lnbmF0dXJlLnZ1ZVwiKVxufVxudmFyIENvbXBvbmVudCA9IHJlcXVpcmUoXCIhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2NvbXBvbmVudC1ub3JtYWxpemVyXCIpKFxuICAvKiBzY3JpcHQgKi9cbiAgcmVxdWlyZShcIiEhYmFiZWwtbG9hZGVyIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy9zY3JpcHQtbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvcj90eXBlPXNjcmlwdCZpbmRleD0wIS4vc2lnbmF0dXJlLnZ1ZVwiKSxcbiAgLyogdGVtcGxhdGUgKi9cbiAgcmVxdWlyZShcIiEhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3RlbXBsYXRlLWNvbXBpbGVyL2luZGV4P3tcXFwiaWRcXFwiOlxcXCJkYXRhLXYtN2Y4ZDMxZDZcXFwiLFxcXCJoYXNTY29wZWRcXFwiOnRydWV9IS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy9iZWZvcmUtdGVtcGxhdGUtY29tcGlsZXItbG9hZGVyLmpzIS4uLy4uLy4uL25vZGVfbW9kdWxlcy92dXgtbG9hZGVyL3NyYy90ZW1wbGF0ZS1sb2FkZXIuanMhLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yP3R5cGU9dGVtcGxhdGUmaW5kZXg9MCEuL3NpZ25hdHVyZS52dWVcIiksXG4gIC8qIHN0eWxlcyAqL1xuICBpbmplY3RTdHlsZSxcbiAgLyogc2NvcGVJZCAqL1xuICBcImRhdGEtdi03ZjhkMzFkNlwiLFxuICAvKiBtb2R1bGVJZGVudGlmaWVyIChzZXJ2ZXIgb25seSkgKi9cbiAgbnVsbFxuKVxuQ29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJFOlxcXFxsZXNsZXlcXFxcbGVzbGV5OTIwNzE5XFxcXHZ1ZTItdnV4LWRlbW9cXFxcc3JjXFxcXHBhZ2VzXFxcXHNpZ25hdHVyZVxcXFxzaWduYXR1cmUudnVlXCJcbmlmIChDb21wb25lbnQuZXNNb2R1bGUgJiYgT2JqZWN0LmtleXMoQ29tcG9uZW50LmVzTW9kdWxlKS5zb21lKGZ1bmN0aW9uIChrZXkpIHtyZXR1cm4ga2V5ICE9PSBcImRlZmF1bHRcIiAmJiBrZXkuc3Vic3RyKDAsIDIpICE9PSBcIl9fXCJ9KSkge2NvbnNvbGUuZXJyb3IoXCJuYW1lZCBleHBvcnRzIGFyZSBub3Qgc3VwcG9ydGVkIGluICoudnVlIGZpbGVzLlwiKX1cbmlmIChDb21wb25lbnQub3B0aW9ucy5mdW5jdGlvbmFsKSB7Y29uc29sZS5lcnJvcihcIlt2dWUtbG9hZGVyXSBzaWduYXR1cmUudnVlOiBmdW5jdGlvbmFsIGNvbXBvbmVudHMgYXJlIG5vdCBzdXBwb3J0ZWQgd2l0aCB0ZW1wbGF0ZXMsIHRoZXkgc2hvdWxkIHVzZSByZW5kZXIgZnVuY3Rpb25zLlwiKX1cblxuLyogaG90IHJlbG9hZCAqL1xuaWYgKG1vZHVsZS5ob3QpIHsoZnVuY3Rpb24gKCkge1xuICB2YXIgaG90QVBJID0gcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKVxuICBob3RBUEkuaW5zdGFsbChyZXF1aXJlKFwidnVlXCIpLCBmYWxzZSlcbiAgaWYgKCFob3RBUEkuY29tcGF0aWJsZSkgcmV0dXJuXG4gIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgaWYgKCFtb2R1bGUuaG90LmRhdGEpIHtcbiAgICBob3RBUEkuY3JlYXRlUmVjb3JkKFwiZGF0YS12LTdmOGQzMWQ2XCIsIENvbXBvbmVudC5vcHRpb25zKVxuICB9IGVsc2Uge1xuICAgIGhvdEFQSS5yZWxvYWQoXCJkYXRhLXYtN2Y4ZDMxZDZcIiwgQ29tcG9uZW50Lm9wdGlvbnMpXG4gIH1cbiAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgZGlzcG9zZWQgPSB0cnVlXG4gIH0pXG59KSgpfVxuXG5tb2R1bGUuZXhwb3J0cyA9IENvbXBvbmVudC5leHBvcnRzXG5cblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyAuL3NyYy9wYWdlcy9zaWduYXR1cmUvc2lnbmF0dXJlLnZ1ZVxuLy8gbW9kdWxlIGlkID0gMzY3XG4vLyBtb2R1bGUgY2h1bmtzID0gMTIiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Iiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///367\n");

/***/ }),

/***/ 414:
/***/ (function(module, exports, __webpack_require__) {

eval("exports = module.exports = __webpack_require__(2)(true);\n// imports\n\n\n// module\nexports.push([module.i, \"\\n.signature[data-v-7f8d31d6] {\\n  box-sizing: border-box;\\n}\\n.signature .signature-pad[data-v-7f8d31d6] {\\n  width: 100%;\\n  height: 100vw;\\n  padding: 10px;\\n  background: #e5e5e5;\\n  position: relative;\\n}\\n.signature .signature-pad .signature-body[data-v-7f8d31d6] {\\n  width: 100%;\\n  height: 100%;\\n  background: #fff;\\n}\\n.signature .signature-pad .signature-body canvas[data-v-7f8d31d6] {\\n  position: absolute;\\n  top: 0 ;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n.signature .signature-pad--actions[data-v-7f8d31d6] {\\n  margin-top: 10px;\\n}\\n.signature .signature-pad--actions div[data-v-7f8d31d6] {\\n  margin-bottom: 10px;\\n}\\n\", \"\", {\"version\":3,\"sources\":[\"E:/lesley/lesley920719/vue2-vux-demo/src/pages/signature/signature.vue\"],\"names\":[],\"mappings\":\";AAAA;EACE,uBAAuB;CACxB;AACD;EACE,YAAY;EACZ,cAAc;EACd,cAAc;EACd,oBAAoB;EACpB,mBAAmB;CACpB;AACD;EACE,YAAY;EACZ,aAAa;EACb,iBAAiB;CAClB;AACD;EACE,mBAAmB;EACnB,QAAQ;EACR,QAAQ;EACR,YAAY;EACZ,aAAa;CACd;AACD;EACE,iBAAiB;CAClB;AACD;EACE,oBAAoB;CACrB\",\"file\":\"signature.vue\",\"sourcesContent\":[\".signature {\\n  box-sizing: border-box;\\n}\\n.signature .signature-pad {\\n  width: 100%;\\n  height: 100vw;\\n  padding: 10px;\\n  background: #e5e5e5;\\n  position: relative;\\n}\\n.signature .signature-pad .signature-body {\\n  width: 100%;\\n  height: 100%;\\n  background: #fff;\\n}\\n.signature .signature-pad .signature-body canvas {\\n  position: absolute;\\n  top: 0 ;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n.signature .signature-pad--actions {\\n  margin-top: 10px;\\n}\\n.signature .signature-pad--actions div {\\n  margin-bottom: 10px;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n\n// exports\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDE0LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3NpZ25hdHVyZS9zaWduYXR1cmUudnVlPzgxOTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSh0cnVlKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIlxcbi5zaWduYXR1cmVbZGF0YS12LTdmOGQzMWQ2XSB7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xcbn1cXG4uc2lnbmF0dXJlIC5zaWduYXR1cmUtcGFkW2RhdGEtdi03ZjhkMzFkNl0ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMHZ3O1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGJhY2tncm91bmQ6ICNlNWU1ZTU7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5zaWduYXR1cmUgLnNpZ25hdHVyZS1wYWQgLnNpZ25hdHVyZS1ib2R5W2RhdGEtdi03ZjhkMzFkNl0ge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbn1cXG4uc2lnbmF0dXJlIC5zaWduYXR1cmUtcGFkIC5zaWduYXR1cmUtYm9keSBjYW52YXNbZGF0YS12LTdmOGQzMWQ2XSB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB0b3A6IDAgO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG4uc2lnbmF0dXJlIC5zaWduYXR1cmUtcGFkLS1hY3Rpb25zW2RhdGEtdi03ZjhkMzFkNl0ge1xcbiAgbWFyZ2luLXRvcDogMTBweDtcXG59XFxuLnNpZ25hdHVyZSAuc2lnbmF0dXJlLXBhZC0tYWN0aW9ucyBkaXZbZGF0YS12LTdmOGQzMWQ2XSB7XFxuICBtYXJnaW4tYm90dG9tOiAxMHB4O1xcbn1cXG5cIiwgXCJcIiwge1widmVyc2lvblwiOjMsXCJzb3VyY2VzXCI6W1wiRTovbGVzbGV5L2xlc2xleTkyMDcxOS92dWUyLXZ1eC1kZW1vL3NyYy9wYWdlcy9zaWduYXR1cmUvc2lnbmF0dXJlLnZ1ZVwiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiO0FBQUE7RUFDRSx1QkFBdUI7Q0FDeEI7QUFDRDtFQUNFLFlBQVk7RUFDWixjQUFjO0VBQ2QsY0FBYztFQUNkLG9CQUFvQjtFQUNwQixtQkFBbUI7Q0FDcEI7QUFDRDtFQUNFLFlBQVk7RUFDWixhQUFhO0VBQ2IsaUJBQWlCO0NBQ2xCO0FBQ0Q7RUFDRSxtQkFBbUI7RUFDbkIsUUFBUTtFQUNSLFFBQVE7RUFDUixZQUFZO0VBQ1osYUFBYTtDQUNkO0FBQ0Q7RUFDRSxpQkFBaUI7Q0FDbEI7QUFDRDtFQUNFLG9CQUFvQjtDQUNyQlwiLFwiZmlsZVwiOlwic2lnbmF0dXJlLnZ1ZVwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIuc2lnbmF0dXJlIHtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcbi5zaWduYXR1cmUgLnNpZ25hdHVyZS1wYWQge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMHZ3O1xcbiAgcGFkZGluZzogMTBweDtcXG4gIGJhY2tncm91bmQ6ICNlNWU1ZTU7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxufVxcbi5zaWduYXR1cmUgLnNpZ25hdHVyZS1wYWQgLnNpZ25hdHVyZS1ib2R5IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG59XFxuLnNpZ25hdHVyZSAuc2lnbmF0dXJlLXBhZCAuc2lnbmF0dXJlLWJvZHkgY2FudmFzIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogMCA7XFxuICBsZWZ0OiAwO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBoZWlnaHQ6IDEwMCU7XFxufVxcbi5zaWduYXR1cmUgLnNpZ25hdHVyZS1wYWQtLWFjdGlvbnMge1xcbiAgbWFyZ2luLXRvcDogMTBweDtcXG59XFxuLnNpZ25hdHVyZSAuc2lnbmF0dXJlLXBhZC0tYWN0aW9ucyBkaXYge1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi9jc3MtbG9hZGVyP3tcIm1pbmltaXplXCI6ZmFsc2UsXCJzb3VyY2VNYXBcIjp0cnVlfSEuL34vdnVlLWxvYWRlci9saWIvc3R5bGUtY29tcGlsZXI/e1widnVlXCI6dHJ1ZSxcImlkXCI6XCJkYXRhLXYtN2Y4ZDMxZDZcIixcInNjb3BlZFwiOnRydWUsXCJoYXNJbmxpbmVDb25maWdcIjp0cnVlfSEuL34vdnV4LWxvYWRlci9zcmMvYWZ0ZXItbGVzcy1sb2FkZXIuanMhLi9+L2xlc3MtbG9hZGVyP3snbW9kaWZ5VmFycyc6eyd0aGVtZSc6JyMzMzMzMzMnLCd0aGVtZS1ibGFjayc6JyMwMDAwMDAnLCd0aGVtZS1zZWNvbmRhcnknOicjNTg1ODU4JywndGhlbWUtcmVkJzonI0U0MzY0RicsJ3RoZW1lLWJnJzonI2VlZWVlZScsJ3RoZW1lLWxpbmVhci1ncmFkaWVudCc6J2xpbmVhci1ncmFkaWVudCgtOTBkZWcsICNlYjQ3NmEgMCUsICNlYjQ3NmEgMTAwJSknLCdoZWFkZXItaGVpZ2h0JzonMC44OHJlbScsJ3BhZ2Utc3BhY2UnOicwLjI0cmVtJywndGhlbWUtcHJpbWFyeSc6JyMyZDhjZjAnLCd0aGVtZS1saWdodC1wcmltYXJ5JzonIzVjYWRmZicsJ3RoZW1lLWRhcmstcHJpbWFyeSc6JyMyYjg1ZTQnLCd0aGVtZS1pbmZvJzonIzJkYjdmNScsJ3RoZW1lLXN1Y2Nlc3MnOicjMTliZTZiJywndGhlbWUtd2FybmluZyc6JyNmZjk5MDAnLCd0aGVtZS1lcnJvcic6JyNlZDQwMTQnLCd0ZXh0LXRpdGxlJzonIzE3MjMzZCcsJ3RleHQtY29udGVudCc6JyM1MTVhNmUnLCdzdWItY29sb3InOicjODA4Njk1JywnYnRuLWRpc2FibGVkJzonI2M1YzhjZScsJ2JvcmRlci1jb2xvcic6JyNkY2RlZTInLCdkaXZpZGVyLWNvbG9yJzonI2U4ZWFlYycsJ2JhY2tncm91bmQtY29sb3InOicjZjhmOGY5JywndGhlbWUtYmQnOicjQjNCM0IzJywnY29sb3JEaXNhYmxlZCc6JyNCOEI4QjgnLCd0aGVtZVRleHQnOicjNDE0MTQxJywnY29sb3JOb3JtYWwnOicjNDE0MTQxJywndGhlbWUtbm9ybWFsJzonIzZGNkY2RicsJ3RoZW1lR3JleSc6JyM5OTknLCdjb2xvckxpZ2h0JzonIzk5OScsJ3RoZW1lLXRpcCc6JyNDMkMyQzInLCd0aGVtZVdhcm4nOicjRkYzQjMwJywnc3dpcGVyLWluZGljYXRvci1hY3RpdmUtY29sb3InOidAdGhlbWUnLCdkYXRldGltZS1oZWFkZXItaXRlbS1jYW5jZWwtZm9udC1jb2xvcic6J0B0aGVtZScsJ2RhdGV0aW1lLWhlYWRlci1pdGVtLWNvbmZpcm0tZm9udC1jb2xvcic6J0B0aGVtZScsJ3BvcHVwLXBpY2tlci1oZWFkZXItdGV4dC1jb2xvcic6J0B0aGVtZScsJ2RpYWxvZy1idXR0b24tdGV4dC1wcmltYXJ5LWNvbG9yJzonQHRoZW1lJywndGFiLXRleHQtZGlzYWJsZWQtY29sb3InOicjZGRkJywndGFiLXRleHQtZGVmYXVsdC1jb2xvcic6JyM2NjYnLCd0YWItdGV4dC1hY3RpdmUtY29sb3InOidAdGhlbWUnLCd0YWItYmFyLWFjdGl2ZS1jb2xvcic6J0B0aGVtZSd9LCdzb3VyY2VNYXAnOnRydWV9IS4vfi92dXgtbG9hZGVyL3NyYy9zdHlsZS1sb2FkZXIuanMhLi9+L3Z1ZS1sb2FkZXIvbGliL3NlbGVjdG9yLmpzP3R5cGU9c3R5bGVzJmluZGV4PTAhLi9zcmMvcGFnZXMvc2lnbmF0dXJlL3NpZ25hdHVyZS52dWVcbi8vIG1vZHVsZSBpZCA9IDQxNFxuLy8gbW9kdWxlIGNodW5rcyA9IDEyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOyIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///414\n");

/***/ }),

/***/ 480:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("Object.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_signature_pad__ = __webpack_require__(502);\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'signature',\n  data: function data() {\n    return {\n      signaturePad: null\n    };\n  },\n\n  computed: {},\n  methods: {\n    // canvas 尺寸未设置成固定值想要100%自适应时需进行resize，否则画笔会有偏移。\n    resizeCanvas: function resizeCanvas() {\n      // When zoomed out to less than 100%, for some very strange reason,\n      // some browsers report devicePixelRatio as less than 1\n      // and only part of the canvas is cleared then.\n      var ratio = Math.max(window.devicePixelRatio || 1, 1);\n\n      // This part causes the canvas to be cleared\n      canvas.width = canvas.offsetWidth * ratio;\n      canvas.height = canvas.offsetHeight * ratio;\n      canvas.getContext(\"2d\").scale(ratio, ratio);\n\n      // This library does not listen for canvas changes, so after the canvas is automatically\n      // cleared by the browser, SignaturePad#isEmpty might still return false, even though the\n      // canvas looks empty, because the internal data of this library wasn't cleared. To make sure\n      // that the state of this library is consistent with visual state of the canvas, you\n      // have to clear it manually.\n      this.signaturePad.clear();\n    },\n    download: function download(dataURL, filename) {\n      if (navigator.userAgent.indexOf(\"Safari\") > -1 && navigator.userAgent.indexOf(\"Chrome\") === -1) {\n        window.open(dataURL);\n      } else {\n        var blob = dataURLToBlob(dataURL);\n        var url = window.URL.createObjectURL(blob);\n\n        var a = document.createElement(\"a\");\n        a.style = \"display: none\";\n        a.href = url;\n        a.download = filename;\n\n        document.body.appendChild(a);\n        a.click();\n\n        window.URL.revokeObjectURL(url);\n      }\n    },\n    clear: function clear() {\n      this.$nextTick(function () {\n        this.signaturePad.clear();\n      });\n    },\n    changeColor: function changeColor() {\n      var r = Math.round(Math.random() * 255);\n      var g = Math.round(Math.random() * 255);\n      var b = Math.round(Math.random() * 255);\n      var color = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n      this.$nextTick(function () {\n        this.signaturePad.penColor = color;\n      });\n    },\n    undo: function undo() {\n      this.$nextTick(function () {\n        var data = this.signaturePad.toData();\n        console.log(data);\n        if (data) {\n          data.pop(); // remove the last dot or line\n          this.signaturePad.fromData(data);\n        }\n      });\n    },\n    savePng: function savePng() {\n      this.$nextTick(function () {\n        if (this.signaturePad.isEmpty()) {\n          alert(\"Please provide a signature first.\");\n        } else {\n          var dataURL = this.signaturePad.toDataURL();\n          this.download(dataURL, \"signature.png\");\n        }\n      });\n    },\n    saveJpg: function saveJpg() {\n      this.$nextTick(function () {\n        if (this.signaturePad.isEmpty()) {\n          alert(\"Please provide a signature first.\");\n        } else {\n          var dataURL = this.signaturePad.toDataURL(\"image/jpeg\");\n          this.download(dataURL, \"signature.jpg\");\n        }\n      });\n    },\n    saveSvg: function saveSvg() {\n      this.$nextTick(function () {\n        if (this.signaturePad.isEmpty()) {\n          alert(\"Please provide a signature first.\");\n        } else {\n          var dataURL = this.signaturePad.toDataURL('image/svg+xml');\n          this.download(dataURL, \"signature.svg\");\n        }\n      });\n    }\n  },\n  mounted: function mounted() {\n    var canvas = this.$refs.canvas;\n    this.signaturePad = new __WEBPACK_IMPORTED_MODULE_0_signature_pad__[\"a\" /* default */](canvas);\n    this.resizeCanvas();\n  }\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDgwLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vL3NyYy9wYWdlcy9zaWduYXR1cmUvc2lnbmF0dXJlLnZ1ZT81YjE0Il0sInNvdXJjZXNDb250ZW50IjpbIi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG4vL1xuLy9cbi8vXG5cclxuaW1wb3J0IFNpZ25hdHVyZVBhZCBmcm9tIFwic2lnbmF0dXJlX3BhZFwiXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICBuYW1lOiAnc2lnbmF0dXJlJyxcclxuICBkYXRhICgpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHNpZ25hdHVyZVBhZDogbnVsbCxcclxuICAgIH1cclxuICB9LFxyXG4gIGNvbXB1dGVkOiB7XHJcbiAgICBcclxuICB9LFxyXG4gIG1ldGhvZHM6IHtcclxuICAgIC8vIGNhbnZhcyDlsLrlr7jmnKrorr7nva7miJDlm7rlrprlgLzmg7PopoExMDAl6Ieq6YCC5bqU5pe26ZyA6L+b6KGMcmVzaXpl77yM5ZCm5YiZ55S756yU5Lya5pyJ5YGP56e744CCXHJcbiAgICByZXNpemVDYW52YXMoKSB7XHJcbiAgICAgIC8vIFdoZW4gem9vbWVkIG91dCB0byBsZXNzIHRoYW4gMTAwJSwgZm9yIHNvbWUgdmVyeSBzdHJhbmdlIHJlYXNvbixcclxuICAgICAgLy8gc29tZSBicm93c2VycyByZXBvcnQgZGV2aWNlUGl4ZWxSYXRpbyBhcyBsZXNzIHRoYW4gMVxyXG4gICAgICAvLyBhbmQgb25seSBwYXJ0IG9mIHRoZSBjYW52YXMgaXMgY2xlYXJlZCB0aGVuLlxyXG4gICAgICB2YXIgcmF0aW8gPSAgTWF0aC5tYXgod2luZG93LmRldmljZVBpeGVsUmF0aW8gfHwgMSwgMSk7XHJcblxyXG4gICAgICAvLyBUaGlzIHBhcnQgY2F1c2VzIHRoZSBjYW52YXMgdG8gYmUgY2xlYXJlZFxyXG4gICAgICBjYW52YXMud2lkdGggPSBjYW52YXMub2Zmc2V0V2lkdGggKiByYXRpbztcclxuICAgICAgY2FudmFzLmhlaWdodCA9IGNhbnZhcy5vZmZzZXRIZWlnaHQgKiByYXRpbztcclxuICAgICAgY2FudmFzLmdldENvbnRleHQoXCIyZFwiKS5zY2FsZShyYXRpbywgcmF0aW8pO1xyXG5cclxuICAgICAgLy8gVGhpcyBsaWJyYXJ5IGRvZXMgbm90IGxpc3RlbiBmb3IgY2FudmFzIGNoYW5nZXMsIHNvIGFmdGVyIHRoZSBjYW52YXMgaXMgYXV0b21hdGljYWxseVxyXG4gICAgICAvLyBjbGVhcmVkIGJ5IHRoZSBicm93c2VyLCBTaWduYXR1cmVQYWQjaXNFbXB0eSBtaWdodCBzdGlsbCByZXR1cm4gZmFsc2UsIGV2ZW4gdGhvdWdoIHRoZVxyXG4gICAgICAvLyBjYW52YXMgbG9va3MgZW1wdHksIGJlY2F1c2UgdGhlIGludGVybmFsIGRhdGEgb2YgdGhpcyBsaWJyYXJ5IHdhc24ndCBjbGVhcmVkLiBUbyBtYWtlIHN1cmVcclxuICAgICAgLy8gdGhhdCB0aGUgc3RhdGUgb2YgdGhpcyBsaWJyYXJ5IGlzIGNvbnNpc3RlbnQgd2l0aCB2aXN1YWwgc3RhdGUgb2YgdGhlIGNhbnZhcywgeW91XHJcbiAgICAgIC8vIGhhdmUgdG8gY2xlYXIgaXQgbWFudWFsbHkuXHJcbiAgICAgIHRoaXMuc2lnbmF0dXJlUGFkLmNsZWFyKCk7XHJcbiAgICB9LFxyXG4gICAgZG93bmxvYWQoZGF0YVVSTCwgZmlsZW5hbWUpIHtcclxuICAgICAgaWYgKG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIlNhZmFyaVwiKSA+IC0xICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZihcIkNocm9tZVwiKSA9PT0gLTEpIHtcclxuICAgICAgICB3aW5kb3cub3BlbihkYXRhVVJMKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB2YXIgYmxvYiA9IGRhdGFVUkxUb0Jsb2IoZGF0YVVSTCk7XHJcbiAgICAgICAgdmFyIHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xyXG5cclxuICAgICAgICB2YXIgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO1xyXG4gICAgICAgIGEuc3R5bGUgPSBcImRpc3BsYXk6IG5vbmVcIjtcclxuICAgICAgICBhLmhyZWYgPSB1cmw7XHJcbiAgICAgICAgYS5kb3dubG9hZCA9IGZpbGVuYW1lO1xyXG5cclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpO1xyXG4gICAgICAgIGEuY2xpY2soKTtcclxuXHJcbiAgICAgICAgd2luZG93LlVSTC5yZXZva2VPYmplY3RVUkwodXJsKTtcclxuICAgICAgfVxyXG4gICAgfSxcclxuICAgIGNsZWFyKCl7XHJcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgdGhpcy5zaWduYXR1cmVQYWQuY2xlYXIoKTtcclxuICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBjaGFuZ2VDb2xvcigpe1xyXG4gICAgICB2YXIgciA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDI1NSk7XHJcbiAgICAgIHZhciBnID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjU1KTtcclxuICAgICAgdmFyIGIgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAyNTUpO1xyXG4gICAgICB2YXIgY29sb3IgPSBcInJnYihcIiArIHIgKyBcIixcIiArIGcgKyBcIixcIiArIGIgK1wiKVwiO1xyXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe1xyXG4gICAgICAgIHRoaXMuc2lnbmF0dXJlUGFkLnBlbkNvbG9yID0gY29sb3I7XHJcbiAgICAgIH0pXHJcbiAgICB9LFxyXG4gICAgdW5kbygpe1xyXG4gICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbigpe1xyXG4gICAgICAgIHZhciBkYXRhID0gdGhpcy5zaWduYXR1cmVQYWQudG9EYXRhKCk7XHJcbiAgICAgICAgY29uc29sZS5sb2coZGF0YSlcclxuICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgZGF0YS5wb3AoKTsgLy8gcmVtb3ZlIHRoZSBsYXN0IGRvdCBvciBsaW5lXHJcbiAgICAgICAgICB0aGlzLnNpZ25hdHVyZVBhZC5mcm9tRGF0YShkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICAgIFxyXG4gICAgfSxcclxuICAgIHNhdmVQbmcoKXtcclxuICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24oKXtcclxuICAgICAgICBpZiAodGhpcy5zaWduYXR1cmVQYWQuaXNFbXB0eSgpKSB7XHJcbiAgICAgICAgICBhbGVydChcIlBsZWFzZSBwcm92aWRlIGEgc2lnbmF0dXJlIGZpcnN0LlwiKTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgdmFyIGRhdGFVUkwgPSB0aGlzLnNpZ25hdHVyZVBhZC50b0RhdGFVUkwoKTtcclxuICAgICAgICAgIHRoaXMuZG93bmxvYWQoZGF0YVVSTCwgXCJzaWduYXR1cmUucG5nXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBzYXZlSnBnKCl7XHJcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgaWYgKHRoaXMuc2lnbmF0dXJlUGFkLmlzRW1wdHkoKSkge1xyXG4gICAgICAgICAgYWxlcnQoXCJQbGVhc2UgcHJvdmlkZSBhIHNpZ25hdHVyZSBmaXJzdC5cIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHZhciBkYXRhVVJMID0gdGhpcy5zaWduYXR1cmVQYWQudG9EYXRhVVJMKFwiaW1hZ2UvanBlZ1wiKTtcclxuICAgICAgICAgIHRoaXMuZG93bmxvYWQoZGF0YVVSTCwgXCJzaWduYXR1cmUuanBnXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgfSlcclxuICAgIH0sXHJcbiAgICBzYXZlU3ZnKCl7XHJcbiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uKCl7XHJcbiAgICAgICAgaWYgKHRoaXMuc2lnbmF0dXJlUGFkLmlzRW1wdHkoKSkge1xyXG4gICAgICAgICAgYWxlcnQoXCJQbGVhc2UgcHJvdmlkZSBhIHNpZ25hdHVyZSBmaXJzdC5cIik7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgIHZhciBkYXRhVVJMID0gdGhpcy5zaWduYXR1cmVQYWQudG9EYXRhVVJMKCdpbWFnZS9zdmcreG1sJyk7XHJcbiAgICAgICAgICB0aGlzLmRvd25sb2FkKGRhdGFVUkwsIFwic2lnbmF0dXJlLnN2Z1wiKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICB9LFxyXG4gIH0sXHJcbiAgbW91bnRlZCgpIHtcclxuICAgIGxldCBjYW52YXMgPSB0aGlzLiRyZWZzLmNhbnZhc1xyXG4gICAgdGhpcy5zaWduYXR1cmVQYWQgPSBuZXcgU2lnbmF0dXJlUGFkKGNhbnZhcyk7XHJcbiAgICB0aGlzLnJlc2l6ZUNhbnZhcygpO1xyXG4gIH0sXHJcbiAgXHJcbn1cclxuXG5cblxuLy8gV0VCUEFDSyBGT09URVIgLy9cbi8vIHNyYy9wYWdlcy9zaWduYXR1cmUvc2lnbmF0dXJlLnZ1ZSJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFEQTtBQUdBO0FBQ0E7QUFBQTtBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE1RkE7QUE4RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQTVHQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///480\n");

/***/ }),

/***/ 502:
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("/*!\n * Signature Pad v3.0.0-beta.3 | https://github.com/szimek/signature_pad\n * (c) 2018 Szymon Nowak | Released under the MIT license\n */\n\nclass Point {\n    constructor(x, y, time) {\n        this.x = x;\n        this.y = y;\n        this.time = time || Date.now();\n    }\n    distanceTo(start) {\n        return Math.sqrt(Math.pow(this.x - start.x, 2) + Math.pow(this.y - start.y, 2));\n    }\n    equals(other) {\n        return this.x === other.x && this.y === other.y && this.time === other.time;\n    }\n    velocityFrom(start) {\n        return (this.time !== start.time) ? this.distanceTo(start) / (this.time - start.time) : 0;\n    }\n}\n\nclass Bezier {\n    constructor(startPoint, control2, control1, endPoint, startWidth, endWidth) {\n        this.startPoint = startPoint;\n        this.control2 = control2;\n        this.control1 = control1;\n        this.endPoint = endPoint;\n        this.startWidth = startWidth;\n        this.endWidth = endWidth;\n    }\n    static fromPoints(points, widths) {\n        const c2 = this.calculateControlPoints(points[0], points[1], points[2]).c2;\n        const c3 = this.calculateControlPoints(points[1], points[2], points[3]).c1;\n        return new Bezier(points[1], c2, c3, points[2], widths.start, widths.end);\n    }\n    static calculateControlPoints(s1, s2, s3) {\n        const dx1 = s1.x - s2.x;\n        const dy1 = s1.y - s2.y;\n        const dx2 = s2.x - s3.x;\n        const dy2 = s2.y - s3.y;\n        const m1 = { x: (s1.x + s2.x) / 2.0, y: (s1.y + s2.y) / 2.0 };\n        const m2 = { x: (s2.x + s3.x) / 2.0, y: (s2.y + s3.y) / 2.0 };\n        const l1 = Math.sqrt((dx1 * dx1) + (dy1 * dy1));\n        const l2 = Math.sqrt((dx2 * dx2) + (dy2 * dy2));\n        const dxm = (m1.x - m2.x);\n        const dym = (m1.y - m2.y);\n        const k = l2 / (l1 + l2);\n        const cm = { x: m2.x + (dxm * k), y: m2.y + (dym * k) };\n        const tx = s2.x - cm.x;\n        const ty = s2.y - cm.y;\n        return {\n            c1: new Point(m1.x + tx, m1.y + ty),\n            c2: new Point(m2.x + tx, m2.y + ty),\n        };\n    }\n    length() {\n        const steps = 10;\n        let length = 0;\n        let px;\n        let py;\n        for (let i = 0; i <= steps; i += 1) {\n            const t = i / steps;\n            const cx = this.point(t, this.startPoint.x, this.control1.x, this.control2.x, this.endPoint.x);\n            const cy = this.point(t, this.startPoint.y, this.control1.y, this.control2.y, this.endPoint.y);\n            if (i > 0) {\n                const xdiff = cx - px;\n                const ydiff = cy - py;\n                length += Math.sqrt((xdiff * xdiff) + (ydiff * ydiff));\n            }\n            px = cx;\n            py = cy;\n        }\n        return length;\n    }\n    point(t, start, c1, c2, end) {\n        return (start * (1.0 - t) * (1.0 - t) * (1.0 - t))\n            + (3.0 * c1 * (1.0 - t) * (1.0 - t) * t)\n            + (3.0 * c2 * (1.0 - t) * t * t)\n            + (end * t * t * t);\n    }\n}\n\nfunction throttle(fn, wait = 250) {\n    let previous = 0;\n    let timeout = null;\n    let result;\n    let storedContext;\n    let storedArgs;\n    const later = () => {\n        previous = Date.now();\n        timeout = null;\n        result = fn.apply(storedContext, storedArgs);\n        if (!timeout) {\n            storedContext = null;\n            storedArgs = [];\n        }\n    };\n    return function (...args) {\n        const now = Date.now();\n        const remaining = wait - (now - previous);\n        storedContext = this;\n        storedArgs = args;\n        if (remaining <= 0 || remaining > wait) {\n            if (timeout) {\n                clearTimeout(timeout);\n                timeout = null;\n            }\n            previous = now;\n            result = fn.apply(storedContext, storedArgs);\n            if (!timeout) {\n                storedContext = null;\n                storedArgs = [];\n            }\n        }\n        else if (!timeout) {\n            timeout = window.setTimeout(later, remaining);\n        }\n        return result;\n    };\n}\n\nclass SignaturePad {\n    constructor(canvas, options = {}) {\n        this.canvas = canvas;\n        this.options = options;\n        this._handleMouseDown = (event) => {\n            if (event.which === 1) {\n                this._mouseButtonDown = true;\n                this._strokeBegin(event);\n            }\n        };\n        this._handleMouseMove = (event) => {\n            if (this._mouseButtonDown) {\n                this._strokeMoveUpdate(event);\n            }\n        };\n        this._handleMouseUp = (event) => {\n            if (event.which === 1 && this._mouseButtonDown) {\n                this._mouseButtonDown = false;\n                this._strokeEnd(event);\n            }\n        };\n        this._handleTouchStart = (event) => {\n            event.preventDefault();\n            if (event.targetTouches.length === 1) {\n                const touch = event.changedTouches[0];\n                this._strokeBegin(touch);\n            }\n        };\n        this._handleTouchMove = (event) => {\n            event.preventDefault();\n            const touch = event.targetTouches[0];\n            this._strokeMoveUpdate(touch);\n        };\n        this._handleTouchEnd = (event) => {\n            const wasCanvasTouched = event.target === this.canvas;\n            if (wasCanvasTouched) {\n                event.preventDefault();\n                const touch = event.changedTouches[0];\n                this._strokeEnd(touch);\n            }\n        };\n        this.velocityFilterWeight = options.velocityFilterWeight || 0.7;\n        this.minWidth = options.minWidth || 0.5;\n        this.maxWidth = options.maxWidth || 2.5;\n        this.throttle = ('throttle' in options ? options.throttle : 16);\n        this.minDistance = ('minDistance' in options ? options.minDistance : 5);\n        if (this.throttle) {\n            this._strokeMoveUpdate = throttle(SignaturePad.prototype._strokeUpdate, this.throttle);\n        }\n        else {\n            this._strokeMoveUpdate = SignaturePad.prototype._strokeUpdate;\n        }\n        this.dotSize = options.dotSize || function () {\n            return (this.minWidth + this.maxWidth) / 2;\n        };\n        this.penColor = options.penColor || 'black';\n        this.backgroundColor = options.backgroundColor || 'rgba(0,0,0,0)';\n        this.onBegin = options.onBegin;\n        this.onEnd = options.onEnd;\n        this._ctx = canvas.getContext('2d');\n        this.clear();\n        this.on();\n    }\n    clear() {\n        const ctx = this._ctx;\n        const canvas = this.canvas;\n        ctx.fillStyle = this.backgroundColor;\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        this._data = [];\n        this._reset();\n        this._isEmpty = true;\n    }\n    fromDataURL(dataUrl, options = {}, callback) {\n        const image = new Image();\n        const ratio = options.ratio || window.devicePixelRatio || 1;\n        const width = options.width || (this.canvas.width / ratio);\n        const height = options.height || (this.canvas.height / ratio);\n        this._reset();\n        image.onload = () => {\n            this._ctx.drawImage(image, 0, 0, width, height);\n            if (callback) {\n                callback();\n            }\n        };\n        image.onerror = (error) => {\n            if (callback) {\n                callback(error);\n            }\n        };\n        image.src = dataUrl;\n        this._isEmpty = false;\n    }\n    toDataURL(type = 'image/png', encoderOptions) {\n        switch (type) {\n            case 'image/svg+xml':\n                return this._toSVG();\n            default:\n                return this.canvas.toDataURL(type, encoderOptions);\n        }\n    }\n    on() {\n        this.canvas.style.touchAction = 'none';\n        this.canvas.style.msTouchAction = 'none';\n        if (window.PointerEvent) {\n            this._handlePointerEvents();\n        }\n        else {\n            this._handleMouseEvents();\n            if ('ontouchstart' in window) {\n                this._handleTouchEvents();\n            }\n        }\n    }\n    off() {\n        this.canvas.style.touchAction = 'auto';\n        this.canvas.style.msTouchAction = 'auto';\n        this.canvas.removeEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.removeEventListener('pointermove', this._handleMouseMove);\n        document.removeEventListener('pointerup', this._handleMouseUp);\n        this.canvas.removeEventListener('mousedown', this._handleMouseDown);\n        this.canvas.removeEventListener('mousemove', this._handleMouseMove);\n        document.removeEventListener('mouseup', this._handleMouseUp);\n        this.canvas.removeEventListener('touchstart', this._handleTouchStart);\n        this.canvas.removeEventListener('touchmove', this._handleTouchMove);\n        this.canvas.removeEventListener('touchend', this._handleTouchEnd);\n    }\n    isEmpty() {\n        return this._isEmpty;\n    }\n    fromData(pointGroups) {\n        this.clear();\n        this._fromData(pointGroups, ({ color, curve }) => this._drawCurve({ color, curve }), ({ color, point }) => this._drawDot({ color, point }));\n        this._data = pointGroups;\n    }\n    toData() {\n        return this._data;\n    }\n    _strokeBegin(event) {\n        const newPointGroup = {\n            color: this.penColor,\n            points: [],\n        };\n        this._data.push(newPointGroup);\n        this._reset();\n        this._strokeUpdate(event);\n        if (typeof this.onBegin === 'function') {\n            this.onBegin(event);\n        }\n    }\n    _strokeUpdate(event) {\n        const x = event.clientX;\n        const y = event.clientY;\n        const point = this._createPoint(x, y);\n        const lastPointGroup = this._data[this._data.length - 1];\n        const lastPoints = lastPointGroup.points;\n        const lastPoint = lastPoints.length > 0 && lastPoints[lastPoints.length - 1];\n        const isLastPointTooClose = lastPoint ? point.distanceTo(lastPoint) <= this.minDistance : false;\n        const color = lastPointGroup.color;\n        if (!lastPoint || !(lastPoint && isLastPointTooClose)) {\n            const curve = this._addPoint(point);\n            if (!lastPoint) {\n                this._drawDot({ color, point });\n            }\n            else if (curve) {\n                this._drawCurve({ color, curve });\n            }\n            lastPoints.push({\n                time: point.time,\n                x: point.x,\n                y: point.y,\n            });\n        }\n    }\n    _strokeEnd(event) {\n        this._strokeUpdate(event);\n        if (typeof this.onEnd === 'function') {\n            this.onEnd(event);\n        }\n    }\n    _handlePointerEvents() {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('pointerdown', this._handleMouseDown);\n        this.canvas.addEventListener('pointermove', this._handleMouseMove);\n        document.addEventListener('pointerup', this._handleMouseUp);\n    }\n    _handleMouseEvents() {\n        this._mouseButtonDown = false;\n        this.canvas.addEventListener('mousedown', this._handleMouseDown);\n        this.canvas.addEventListener('mousemove', this._handleMouseMove);\n        document.addEventListener('mouseup', this._handleMouseUp);\n    }\n    _handleTouchEvents() {\n        this.canvas.addEventListener('touchstart', this._handleTouchStart);\n        this.canvas.addEventListener('touchmove', this._handleTouchMove);\n        this.canvas.addEventListener('touchend', this._handleTouchEnd);\n    }\n    _reset() {\n        this._lastPoints = [];\n        this._lastVelocity = 0;\n        this._lastWidth = (this.minWidth + this.maxWidth) / 2;\n        this._ctx.fillStyle = this.penColor;\n    }\n    _createPoint(x, y) {\n        const rect = this.canvas.getBoundingClientRect();\n        return new Point(x - rect.left, y - rect.top, new Date().getTime());\n    }\n    _addPoint(point) {\n        const { _lastPoints } = this;\n        _lastPoints.push(point);\n        if (_lastPoints.length > 2) {\n            if (_lastPoints.length === 3) {\n                _lastPoints.unshift(_lastPoints[0]);\n            }\n            const widths = this._calculateCurveWidths(_lastPoints[1], _lastPoints[2]);\n            const curve = Bezier.fromPoints(_lastPoints, widths);\n            _lastPoints.shift();\n            return curve;\n        }\n        return null;\n    }\n    _calculateCurveWidths(startPoint, endPoint) {\n        const velocity = (this.velocityFilterWeight * endPoint.velocityFrom(startPoint))\n            + ((1 - this.velocityFilterWeight) * this._lastVelocity);\n        const newWidth = this._strokeWidth(velocity);\n        const widths = {\n            end: newWidth,\n            start: this._lastWidth,\n        };\n        this._lastVelocity = velocity;\n        this._lastWidth = newWidth;\n        return widths;\n    }\n    _strokeWidth(velocity) {\n        return Math.max(this.maxWidth / (velocity + 1), this.minWidth);\n    }\n    _drawCurveSegment(x, y, width) {\n        const ctx = this._ctx;\n        ctx.moveTo(x, y);\n        ctx.arc(x, y, width, 0, 2 * Math.PI, false);\n        this._isEmpty = false;\n    }\n    _drawCurve({ color, curve }) {\n        const ctx = this._ctx;\n        const widthDelta = curve.endWidth - curve.startWidth;\n        const drawSteps = Math.floor(curve.length()) * 2;\n        ctx.beginPath();\n        ctx.fillStyle = color;\n        for (let i = 0; i < drawSteps; i += 1) {\n            const t = i / drawSteps;\n            const tt = t * t;\n            const ttt = tt * t;\n            const u = 1 - t;\n            const uu = u * u;\n            const uuu = uu * u;\n            let x = uuu * curve.startPoint.x;\n            x += 3 * uu * t * curve.control1.x;\n            x += 3 * u * tt * curve.control2.x;\n            x += ttt * curve.endPoint.x;\n            let y = uuu * curve.startPoint.y;\n            y += 3 * uu * t * curve.control1.y;\n            y += 3 * u * tt * curve.control2.y;\n            y += ttt * curve.endPoint.y;\n            const width = curve.startWidth + (ttt * widthDelta);\n            this._drawCurveSegment(x, y, width);\n        }\n        ctx.closePath();\n        ctx.fill();\n    }\n    _drawDot({ color, point }) {\n        const ctx = this._ctx;\n        const width = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n        ctx.beginPath();\n        this._drawCurveSegment(point.x, point.y, width);\n        ctx.closePath();\n        ctx.fillStyle = color;\n        ctx.fill();\n    }\n    _fromData(pointGroups, drawCurve, drawDot) {\n        for (const group of pointGroups) {\n            const { color, points } = group;\n            if (points.length > 1) {\n                for (let j = 0; j < points.length; j += 1) {\n                    const basicPoint = points[j];\n                    const point = new Point(basicPoint.x, basicPoint.y, basicPoint.time);\n                    this.penColor = color;\n                    if (j === 0) {\n                        this._reset();\n                    }\n                    const curve = this._addPoint(point);\n                    if (curve) {\n                        drawCurve({ color, curve });\n                    }\n                }\n            }\n            else {\n                this._reset();\n                drawDot({\n                    color,\n                    point: points[0],\n                });\n            }\n        }\n    }\n    _toSVG() {\n        const pointGroups = this._data;\n        const ratio = Math.max(window.devicePixelRatio || 1, 1);\n        const minX = 0;\n        const minY = 0;\n        const maxX = this.canvas.width / ratio;\n        const maxY = this.canvas.height / ratio;\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', this.canvas.width.toString());\n        svg.setAttribute('height', this.canvas.height.toString());\n        this._fromData(pointGroups, ({ color, curve }) => {\n            const path = document.createElement('path');\n            if (!isNaN(curve.control1.x) &&\n                !isNaN(curve.control1.y) &&\n                !isNaN(curve.control2.x) &&\n                !isNaN(curve.control2.y)) {\n                const attr = `M ${curve.startPoint.x.toFixed(3)},${curve.startPoint.y.toFixed(3)} `\n                    + `C ${curve.control1.x.toFixed(3)},${curve.control1.y.toFixed(3)} `\n                    + `${curve.control2.x.toFixed(3)},${curve.control2.y.toFixed(3)} `\n                    + `${curve.endPoint.x.toFixed(3)},${curve.endPoint.y.toFixed(3)}`;\n                path.setAttribute('d', attr);\n                path.setAttribute('stroke-width', (curve.endWidth * 2.25).toFixed(3));\n                path.setAttribute('stroke', color);\n                path.setAttribute('fill', 'none');\n                path.setAttribute('stroke-linecap', 'round');\n                svg.appendChild(path);\n            }\n        }, ({ color, point }) => {\n            const circle = document.createElement('circle');\n            const dotSize = typeof this.dotSize === 'function' ? this.dotSize() : this.dotSize;\n            circle.setAttribute('r', dotSize.toString());\n            circle.setAttribute('cx', point.x.toString());\n            circle.setAttribute('cy', point.y.toString());\n            circle.setAttribute('fill', color);\n            svg.appendChild(circle);\n        });\n        const prefix = 'data:image/svg+xml;base64,';\n        const header = '<svg'\n            + ' xmlns=\"http://www.w3.org/2000/svg\"'\n            + ' xmlns:xlink=\"http://www.w3.org/1999/xlink\"'\n            + ` viewBox=\"${minX} ${minY} ${maxX} ${maxY}\"`\n            + ` width=\"${maxX}\"`\n            + ` height=\"${maxY}\"`\n            + '>';\n        let body = svg.innerHTML;\n        if (body === undefined) {\n            const dummy = document.createElement('dummy');\n            const nodes = svg.childNodes;\n            dummy.innerHTML = '';\n            for (let i = 0; i < nodes.length; i += 1) {\n                dummy.appendChild(nodes[i].cloneNode(true));\n            }\n            body = dummy.innerHTML;\n        }\n        const footer = '</svg>';\n        const data = header + body + footer;\n        return prefix + btoa(data);\n    }\n}\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (SignaturePad);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///502\n");

/***/ }),

/***/ 665:
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports={render:function (){var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;\n  return _c('div', {\n    staticClass: \"signature\"\n  }, [_c('div', {\n    staticClass: \"signature-pad\"\n  }, [_c('div', {\n    staticClass: \"signature-body\"\n  }, [_c('canvas', {\n    ref: \"canvas\",\n    attrs: {\n      \"id\": \"canvas\"\n    }\n  })])]), _vm._v(\" \"), _c('div', {\n    staticClass: \"signature-pad--actions\"\n  }, [_c('div', [_c('button', {\n    staticClass: \"button clear\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.clear\n    }\n  }, [_vm._v(\"Clear\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.changeColor\n    }\n  }, [_vm._v(\"Change color\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.undo\n    }\n  }, [_vm._v(\"Undo\")])]), _vm._v(\" \"), _c('div', [_c('button', {\n    staticClass: \"button save\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.savePng\n    }\n  }, [_vm._v(\"Save as PNG\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button save\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.saveJpg\n    }\n  }, [_vm._v(\"Save as JPG\")]), _vm._v(\" \"), _c('button', {\n    staticClass: \"button save\",\n    attrs: {\n      \"type\": \"button\"\n    },\n    on: {\n      \"click\": _vm.saveSvg\n    }\n  }, [_vm._v(\"Save as SVG\")])])])])\n},staticRenderFns: []}\nmodule.exports.render._withStripped = true\nif (true) {\n  module.hot.accept()\n  if (module.hot.data) {\n     __webpack_require__(0).rerender(\"data-v-7f8d31d6\", module.exports)\n  }\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNjY1LmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3BhZ2VzL3NpZ25hdHVyZS9zaWduYXR1cmUudnVlPzg5ZDAiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHM9e3JlbmRlcjpmdW5jdGlvbiAoKXt2YXIgX3ZtPXRoaXM7dmFyIF9oPV92bS4kY3JlYXRlRWxlbWVudDt2YXIgX2M9X3ZtLl9zZWxmLl9jfHxfaDtcbiAgcmV0dXJuIF9jKCdkaXYnLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwic2lnbmF0dXJlXCJcbiAgfSwgW19jKCdkaXYnLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwic2lnbmF0dXJlLXBhZFwiXG4gIH0sIFtfYygnZGl2Jywge1xuICAgIHN0YXRpY0NsYXNzOiBcInNpZ25hdHVyZS1ib2R5XCJcbiAgfSwgW19jKCdjYW52YXMnLCB7XG4gICAgcmVmOiBcImNhbnZhc1wiLFxuICAgIGF0dHJzOiB7XG4gICAgICBcImlkXCI6IFwiY2FudmFzXCJcbiAgICB9XG4gIH0pXSldKSwgX3ZtLl92KFwiIFwiKSwgX2MoJ2RpdicsIHtcbiAgICBzdGF0aWNDbGFzczogXCJzaWduYXR1cmUtcGFkLS1hY3Rpb25zXCJcbiAgfSwgW19jKCdkaXYnLCBbX2MoJ2J1dHRvbicsIHtcbiAgICBzdGF0aWNDbGFzczogXCJidXR0b24gY2xlYXJcIixcbiAgICBhdHRyczoge1xuICAgICAgXCJ0eXBlXCI6IFwiYnV0dG9uXCJcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBcImNsaWNrXCI6IF92bS5jbGVhclxuICAgIH1cbiAgfSwgW192bS5fdihcIkNsZWFyXCIpXSksIF92bS5fdihcIiBcIiksIF9jKCdidXR0b24nLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwiYnV0dG9uXCIsXG4gICAgYXR0cnM6IHtcbiAgICAgIFwidHlwZVwiOiBcImJ1dHRvblwiXG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgXCJjbGlja1wiOiBfdm0uY2hhbmdlQ29sb3JcbiAgICB9XG4gIH0sIFtfdm0uX3YoXCJDaGFuZ2UgY29sb3JcIildKSwgX3ZtLl92KFwiIFwiKSwgX2MoJ2J1dHRvbicsIHtcbiAgICBzdGF0aWNDbGFzczogXCJidXR0b25cIixcbiAgICBhdHRyczoge1xuICAgICAgXCJ0eXBlXCI6IFwiYnV0dG9uXCJcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBcImNsaWNrXCI6IF92bS51bmRvXG4gICAgfVxuICB9LCBbX3ZtLl92KFwiVW5kb1wiKV0pXSksIF92bS5fdihcIiBcIiksIF9jKCdkaXYnLCBbX2MoJ2J1dHRvbicsIHtcbiAgICBzdGF0aWNDbGFzczogXCJidXR0b24gc2F2ZVwiLFxuICAgIGF0dHJzOiB7XG4gICAgICBcInR5cGVcIjogXCJidXR0b25cIlxuICAgIH0sXG4gICAgb246IHtcbiAgICAgIFwiY2xpY2tcIjogX3ZtLnNhdmVQbmdcbiAgICB9XG4gIH0sIFtfdm0uX3YoXCJTYXZlIGFzIFBOR1wiKV0pLCBfdm0uX3YoXCIgXCIpLCBfYygnYnV0dG9uJywge1xuICAgIHN0YXRpY0NsYXNzOiBcImJ1dHRvbiBzYXZlXCIsXG4gICAgYXR0cnM6IHtcbiAgICAgIFwidHlwZVwiOiBcImJ1dHRvblwiXG4gICAgfSxcbiAgICBvbjoge1xuICAgICAgXCJjbGlja1wiOiBfdm0uc2F2ZUpwZ1xuICAgIH1cbiAgfSwgW192bS5fdihcIlNhdmUgYXMgSlBHXCIpXSksIF92bS5fdihcIiBcIiksIF9jKCdidXR0b24nLCB7XG4gICAgc3RhdGljQ2xhc3M6IFwiYnV0dG9uIHNhdmVcIixcbiAgICBhdHRyczoge1xuICAgICAgXCJ0eXBlXCI6IFwiYnV0dG9uXCJcbiAgICB9LFxuICAgIG9uOiB7XG4gICAgICBcImNsaWNrXCI6IF92bS5zYXZlU3ZnXG4gICAgfVxuICB9LCBbX3ZtLl92KFwiU2F2ZSBhcyBTVkdcIildKV0pXSldKVxufSxzdGF0aWNSZW5kZXJGbnM6IFtdfVxubW9kdWxlLmV4cG9ydHMucmVuZGVyLl93aXRoU3RyaXBwZWQgPSB0cnVlXG5pZiAobW9kdWxlLmhvdCkge1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmIChtb2R1bGUuaG90LmRhdGEpIHtcbiAgICAgcmVxdWlyZShcInZ1ZS1ob3QtcmVsb2FkLWFwaVwiKS5yZXJlbmRlcihcImRhdGEtdi03ZjhkMzFkNlwiLCBtb2R1bGUuZXhwb3J0cylcbiAgfVxufVxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC4vfi92dWUtbG9hZGVyL2xpYi90ZW1wbGF0ZS1jb21waWxlcj97XCJpZFwiOlwiZGF0YS12LTdmOGQzMWQ2XCIsXCJoYXNTY29wZWRcIjp0cnVlfSEuL34vdnV4LWxvYWRlci9zcmMvYmVmb3JlLXRlbXBsYXRlLWNvbXBpbGVyLWxvYWRlci5qcyEuL34vdnV4LWxvYWRlci9zcmMvdGVtcGxhdGUtbG9hZGVyLmpzIS4vfi92dWUtbG9hZGVyL2xpYi9zZWxlY3Rvci5qcz90eXBlPXRlbXBsYXRlJmluZGV4PTAhLi9zcmMvcGFnZXMvc2lnbmF0dXJlL3NpZ25hdHVyZS52dWVcbi8vIG1vZHVsZSBpZCA9IDY2NVxuLy8gbW9kdWxlIGNodW5rcyA9IDEyIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///665\n");

/***/ }),

/***/ 704:
/***/ (function(module, exports, __webpack_require__) {

eval("// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(414);\nif(typeof content === 'string') content = [[module.i, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar update = __webpack_require__(3)(\"16a1f71c\", content, false, {});\n// Hot Module Replacement\nif(true) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(414, function() {\n     var newContent = __webpack_require__(414);\n     if(typeof newContent === 'string') newContent = [[module.i, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///704\n");

/***/ })

});